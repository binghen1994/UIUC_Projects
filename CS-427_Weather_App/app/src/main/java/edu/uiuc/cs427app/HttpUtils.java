package edu.uiuc.cs427app;
import android.os.Handler;
import android.util.Log;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.security.auth.callback.Callback;


/**
 * fetch data generated by API through http request
 * Utility class for making HTTP requests and handling JSON data.
 */
public class HttpUtils {
    /**
     * Performs an HTTP GET request to the specified URL and retrieves the JSON content.
     *
     * @param url_path The URL to make the HTTP GET request.
     * @return A string containing the JSON content received from the server.
     */
    //set up HTTP connection and return string received from server
    public static String getJsonContent(String url_path) {
        try {
            URL url = new URL(url_path);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setInstanceFollowRedirects(false);
            connection.setConnectTimeout(3000);
            connection.setRequestMethod("GET");
            connection.setDoInput(true);//allow input data from server
            int code = connection.getResponseCode();
            if (code == 200) {
                Log.d("HTTP connection", "SUCCESS");
                //if connection is set, fetch data and transfer to string
                return getJsonString(connection.getInputStream());
            }
        } catch (Exception e) {
            Log.d("HTTP connection", "Failed");
            e.printStackTrace();
        }

        return "";
    }

    //transfer data received from HTTP request to string
    /**
     * Converts the data received from an InputStream to a string.
     *
     * @param inputStream The InputStream containing the data.
     * @return A string representation of the data.
     */
    private static String getJsonString(InputStream inputStream) {

        String jsonString = "";
        //store data from input stream into memory
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        int len = 0;
        byte[] data = new byte[1024];
        try {
            while ((len = inputStream.read(data)) != -1) {
                outputStream.write(data, 0, len);
            }
            //outputStream to byteArray
            jsonString = new String(outputStream.toByteArray());
            Log.d("jsonString", jsonString);
            return jsonString;
        } catch (IOException e) {
            e.printStackTrace();
        }
        return "";
    }
}
